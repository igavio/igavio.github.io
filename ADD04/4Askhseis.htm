<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Ασκήσεις μαθήματος 'Αλγόριθμοι - Δομές Δεδομένων'</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-7">
</head>
<link href="../ADD/ADD.css" rel="stylesheet" type="text/css">
<body>
<p><strong>Ασκήσεις: <a href="#">1</a> <a href="#A2">2</a> <a href="#A3">3</a> 
  <a href="#A4">4</a> <a href="#A5">5</a> <a href="#A6">6</a> <a href="#">7</a><em><font color="#660066"> 
  - </font></em></strong><strong><em><font color="#660066">ΜΗΝ ΑΝΤΙΓΡΑΨΕΤΕ</font></em></strong><font color="#660066"><em> 
  - Κινδυνεύετε να χάσετε όλο το μάθημα</em></font></p>
<p>Δείτε <a href="AskLog.htm">οδηγίες για υποβολή ασκήσεων που περιλαμβάνουν λογισμικό</a>.</p>
<p><strong><a name="A1"></a>Άσκηση 1<sup>η</sup> </strong>- Ανακοινώθηκε την 21/10/2004 
  - μετράει για 15% του τελικού βαθμού</p>
<p>(α) Φτιάξτε πρόγραμμα που να υλοποιεί τον αλγόριθμο:</p>
<blockquote> 
  <pre><font face="Courier New, Courier, mono">ΠερίεργοςΑλγόριθμος(είσοδος: ακέραιος ν που είναι μεγαλύτερος του 0) 
   <strong>όσο</strong> το ν είναι διαφορετικό του 1 <strong>κάνε</strong>
      <strong>αν</strong> το ν είναι άρτιο, κάνε το ν ίσο με ν/2
      <strong>διαφορετικά</strong>,         κάνε το ν ίσο με 3ν+1
   <strong>τέλος-όσο
τέλος-αλγόριθμου</strong></font>
</pre>
</blockquote>
<p>Κατά την πειραματική εκτέλεσή του, θα τυπώνει τις διαδοχικές τιμές που παίρνει 
  το v και πριν τερματίσει θα εμφανίζει το πλήθος των επαναλήψεων. Για παράδειγμα, 
  αν κληθεί με ν=5, θα τυπώσει κάτι σαν: <font face="Courier New, Courier, mono">5 
  16 8 4 2 1</font> και θα επιστρέψει 5.</p>
<p>(β) Εκτελέστε τον αλγόριθμο διαδοχικά για ν=1, 2, 3, ..., MAX, όπου ΜΑΧ είναι 
  τα τέσσερα τελευταία ψηφία του αριθμού μητρώου σας. Καταγράψτε τα αποτελέσματα. 
</p>
<p>(γ) Βρείτε ποιος αριθμός ν, όπου 1&lt;=ν&lt;=ΜΑΧ, απαιτεί τις περισσότερες 
  επαναλήψεις. </p>
<p>(δ) Προσπαθήστε να βγάλετε κάποια συμπεράσματα για τη συμπεριφορά αυτού του 
  <font face="Courier New, Courier, mono">ΠερίεργουΑλγορίθμου</font>. Αν βρείτε 
  το κόστος του αλγορίθμου για οποιοδήποτε ν, περνάτε το μάθημα :-)</p>
<p>(ε) Αφαιρέστε ό,τι κρίνετε περιττό, βελτιστοποιήστε τον κώδικα για μέγιστη 
  ταχύτητα και χρονομετρήστε το πρόγραμμά σας για MAX=2000. Θα πρέπει να τυπώνει 
  μόνον ποιος αριθμός απαιτεί τις περισσότερες επαναλήψεις. [Ο βαθμός της γρηγορότερης 
  άσκησης θα υπολογιστεί διπλός.]</p>
<p>Πριν το μάθημα της 8/11 θα παραδώσετε 1 φύλλο <strong>χαρτί</strong> με τον 
  κώδικα και την απάντηση στα (γ) και (ε). Θα μου στείλετε με email τα (α)-(ε). 
  Οι απαντήσεις θα συζητηθούν στο μάθημα.</p>
<hr width="62%">
<p><strong><a name="A2"></a>Άσκηση 2<sup>η</sup></strong>- Ανακοινώθηκε την 25/10/2004 
  - μετράει για 10% του τελικού βαθμού</p>
<p>(α) Υπολογίστε πόσο κάνει το <img src="asum.PNG" width="116" height="53" align="baseline">, 
  όπου λ, μ είναι γνωστοί αριθμοί. </p>
<p>(β) Υπολογίστε πόσες πράξεις (προσθέσεις και πολλαπλασιασμούς, αθροιστικά) 
  εκτελούνται στο πρόγραμμα:</p>
<blockquote> 
  <pre><font face="Courier New, Courier, mono"><strong>για</strong> i = 1 <strong>έως</strong> n
   αθρ = υπολΑθρ( i )
   γιν = υπολΓιν( i )
   χ = ( αθρ + γιν ) *</font><font face="Courier New, Courier, mono"> 2
   ψ = ( αθρ * γιν ) / 2
<strong>τέλος </strong>i<strong>

συνάρτηση </strong>υπολΑθρ<strong> </strong>( οριο )
   αθρ = 0<strong>
   για </strong>j = 1 <strong>έως</strong> οριο
      αθρ = αθρ + 2
<strong>τέλος</strong> υπολΑθρ

<strong>συνάρτηση </strong>υπολΓιν<strong> </strong>( οριο )
  γιν = 0<strong>
   για </strong>j = 1 <strong>έως</strong> οριο
      γιν = γιν * 2
<strong>τέλος</strong> υπολΓιν</font></pre>
</blockquote>
<p>Πριν το μάθημα της 22/11 θα παραδώσετε 1 φύλλο χαρτί με την απάντηση.</p>
<hr width="62%">
<p><strong><a name="A3"></a>Άσκηση 3<sup>η</sup></strong>- Ανακοινώθηκε την 22/10/2004 
  - μετράει για 10% του τελικού βαθμού</p>
<p>Ας υποθέσουμε ότι έχουμε ένα πίνακα με n αριθμούς. Θέλουμε να εκτελέσουμε k 
  αναζητήσεις στοιχείων στον πίνακα. (α) Περιγράψτε δύο εναλλακτικές τεχνικές 
  για να λύσουμε το πρόβλημα. (β) Υπολογίστε το κόστος τους για πίνακα μεγέθους 
  n=1.024 στο οποίο αναζητούμε k=[ο μήνας που γεννηθήκατε] στοιχεία. Ποια τεχνική 
  συμφέρει; (γ) Ποια τεχνική συμφέρει όταν είναι μεγάλο το n και ποια όταν είναι 
  μεγάλο το k;</p>
<p>Το κόστος της ταξινόμησης πίνακα n αριθμών είναι n.log<sub>2</sub>n.</p>
<p>Πριν το μάθημα της 29/11 θα παραδώσετε 1 φύλλο χαρτί με τις απαντήσεις σας. 
  Η άσκηση που θα οπτικοποιήσει με παραστατικό τρόπο (πχ γραφήματα) το (γ) θα 
  πάρει bonus 50% του αρχικού βαθμού της.</p>
<hr width="62%">
<p><strong><a name="A4"></a>Άσκηση 4<sup>η</sup></strong>- Μετράει για 15% του 
  τελικού βαθμού - Παραδοτέα μέχρι 15/12/2004</p>
<table width="100%" border="0">
  <tr>
    <td width="75%"><p>(α) Φτιάξτε και δημοσιεύσετε εφαρμογίδιο (applet) που θα 
        σχεδιάζει δυαδικά δέντρα. Θα παίρνει ως είσοδο το δέντρο σε παρενθετοποιημένη 
        μορφή* και θα παράγει ως έξοδο σχέδιο που θα αποτελείται από κύκλους μέσα 
        στους οποίους θα βρίσκονται οι τιμές των κόμβων και ευθείες που θα συνδέουν 
        τους κύκλους. Η τετμημένη του κόμβου θα υπολογίζεται με βάση τον αριθμό 
        του κόμβου κατά μια εσωδιάταξη του δέντρου. Η τεταγμένη θα υπολογίζεται 
        χρησιμοποιώντας το αντίθετο του βάθους του κόμβου στο δέντρο. <br>
        (β) Χρησιμοποιώντας το εφαρμογίδιο, σχεδιάστε το Δυαδικό Δέντρο Αναζήτησης 
        (ΔΔΑ) που δημιουργείται εισάγοντας τα στοιχεία P, R, F, H, N, S, C, J, 
        W, M, U, L με αυτή τη σειρά. <br>
        (γ) Ποιο είναι το μικρότερο βάθος που θα μπορούσε να έχει ένα ΔΔΑ με τόσους 
        κόμβους; Σχεδιάστε ένα τέτοιο δέντρο για τα στοιχεία του ερωτήματος (β), 
        και αναφέρετε μια σειρά με την οποία πρέπει να εισαχθούν τα στοιχεία για 
        να προκύψει το συγκεκριμένο ΔΔΑ. <br>
        (δ) Σχεδιάστε το ΔΔΑ που προκύπτει εκτελώντας διαδοχικά remove(H), remove(P), 
        remove(R), remove(J) στο δέντρο του ερωτήματος (β).<br>
        Θα συμπιέσετε και θα στείλετε τον κατάλογο του project που περιλαμβάνει 
        και τον πηγαίο κώδικα. Σε μια αναφορά θα συμπεριλάβετε το URL της ιστοσελίδας 
        που φιλοξενεί το εφαρμογίδιο και τις απαντήσεις στα (β)-(δ).<br>
        * Για διευκόλυνση, μπορείτε να εισάγετε το δέντρο δίνοντας τους κόμβους 
        του με τη σειρά που θα αποθηκεύονταν σε ένα διάνυσμα. Στο παράδειγμα, 
        θα ήταν ΡΤΥΚ--M-Ε.</p>
      </td>
    <td width="25%"><img src="btree.GIF" alt="" width="238" height="214" align="right"> </td>
  </tr>
</table>
<hr width="62%">
<p><strong><a name="A5"></a>Άσκηση 5<sup>η</sup></strong>- Μετράει για 15% του 
  τελικού βαθμού - Παραδοτέα μέχρι 16/1/2005</p>
<p>Ένα σύστημα αγοραπωλησίας μετοχών δέχεται εντολές της μορφής «Αγόρασε 100 μετοχές 
  στην τιμή α» και «Πούλησε 100 μετοχές στην τιμή π». Μια εντολή αγοράς σε τιμή 
  α πραγματοποιείται μόνον αν υπάρχει εντολή πώλησης σε τιμή π, και α &gt;= π. 
  Αντίστοιχα, μια εντολή πώλησης σε τιμή π πραγματοποιείται μόνον αν υπάρχει εντολή 
  αγοράς σε τιμή α, και α &gt;= π. Αν εισαχθεί μια εντολή αγοράς ή πώλησης και 
  δεν μπορεί να πραγματοποιηθεί, περιμένει μήπως κάποια μελλοντική εντολή την 
  καλύψει. (α) Σχεδιάστε πρόγραμμα για το σύστημα αγοραπωλησίας και (β) εκτιμήστε 
  τις επιδόσεις του.</p>
<hr width="62%">
<p><strong><a name="A6"></a>Άσκηση 6<sup>η</sup></strong>- Μετράει για 20% του 
  τελικού βαθμού - Παραδοτέα μέχρι 21/1/2005</p>
<p>Υλοποιήστε κατακερματισμό με ανοικτή διευθυνσιοδότηση και γραμμική δοκιμή (open 
  addressing with linear probing). Ελέγξτε τις επιδόσεις κατά την εισαγωγή τυχαίων 
  ακέραιων αριθμών. Στα πειράματά σας θα έχετε μέγεθος πίνακα κατακερματισμού 
  N = 10<sup>3</sup>, 10<sup>4</sup>, 10<sup>5</sup>, 10<sup>6</sup>. Για κάθε 
  πίνακα κατακερματισμού συγκεκριμένου μεγέθους Ν θα μετράτε τις συγκρούσεις όταν 
  ο παράγων φόρτου (load factor) λαμβάνει τιμή λ = 10%, 20%, ..., 90%. Για κάθε 
  συνδυασμό Ν, λ θα υπολογίζετε το μέσο αριθμό συγκρούσεων ανά εισαγωγή. Επίσης, 
  όταν ολοκληρωθεί η εισαγωγή των στοιχείων θα μετράτε το μέγεθος της μεγαλύτερης 
  ομάδας (cluster). Το πρόγραμμά σας θα πρέπει να δίνει τη δυνατότητα αλλαγής, 
  τόσο του εύρους του Ν, όσο και του εύρους του λ. Φτιάξτε γραφική απεικόνιση 
  των αποτελεσμάτων και αντλήστε συμπεράσματα.<br>
  Προαιρετικό: Αφού κατασκευάσετε πίνακα μεγέθους Ν και τον γεμίσετε σε ποσοστό 
  λ τυχαία στοιχεία, αναζητήστε άλλα k = λ/2 τυχαία στοιχεία. Μετρήστε τις επιδόσεις 
  με βάση τον αριθμό των συγκρούσεων υπολογίζοντας ξεχωριστούς δείκτες, όταν το 
  στοιχείο υπάρχει στον πίνακα κατακερματισμού (hit) και όταν δεν υπάρχει (miss).</p>
<hr width="62%">
<p><strong><a name="A7"></a>Άσκηση 7<sup>η</sup></strong>- Μετράει για 15% του 
  τελικού βαθμού - Παραδοτέα μέχρι 16/1/2005</p>
<p>Η Ευρωπαϊκή Ένωση χρηματοδοτεί την οδική σύνδεση των νησιών Σύρος, Τήνος, Μύκονος, 
  Άνδρος, Κέα, Κύθνος, Σίκινος, Φολέγανδρος, Σέριφος, Πάρος, Νάξος, Ίος, Σίφνος, 
  Θήρα, Μήλος και Αμοργός με κρεμαστές γέφυρες! Το κόστος κάθε γέφυρας είναι ανάλογο 
  του μήκους της. Στο <a href="cyclades.gif">χάρτη</a>, η γέφυρα που σημειώνεται 
  με κόκκινη ευθεία να συνδέει τη Σύρο με την Κύθνο, έχει μήκος 100 και κοστίζει 
  100 (εκατομμύρια ευρώ, ας πούμε). Το έργο θα το αναλάβει ο εργολάβος που θα 
  μειοδοτήσει. Ποιες γέφυρες θα επιλέξετε να κατασκευάσετε; Θα παραδώσετε τεκμηριωμένη 
  μελέτη που θα περιλαμβάνει (α) το κόστος κάθε πιθανής γέφυρας, (β) την εκτέλεση 
  βήμα-προς-βήμα κατάλληλου αλγορίθμου και (γ) το χάρτης με τις επιλεγείσες γέφυρες 
  και το συνολικό τους κόστος. <br>
  (δ) Προσθέστε άλλες 12 γέφυρες - τις πιο οικονομικές από τις μη αρχικά επιλεγείσες. 
  Ο Νομάρχης, που έχει έδρα τη Σύρο, κάθε σαββατοκύριακο επισκέπτεται και ένα 
  νησί. Από ποιες γέφυρες θα περνάει σε κάθε ταξίδι του και πόση απόσταση θα διανύσει 
  συνολικά για να τα επισκεφθεί όλα;</p>
</body>
</html>
