<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Γενικά μαθήματος 'Τεχνολογίες &amp; Μεθοδολογίες Προγραμματισμού ΙΙ</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-7">
</head>
<link href="TMP2.css" rel="stylesheet" type="text/css">
<body>
<h4>Γενικά: <a href="#E1">Στόχοι</a> - <a href="#E2">Ωρολόγιο</a> - <a href="#E3">Αξιολόγηση </a>- <a href="#E4">Ύλη </a>- <a href="#E5">Υπόβαθρο 
  </a>- <a href="#E6">Βιβλιογραφία</a> - <a href="#E7">Πηγές</a></h4>
<h4>Στόχοι του μαθήματος<a name="E1"></a></h4>
<p> Οι φοιτητές που θα ολοκληρώσουν αυτό το μάθημα: </p>
<ul>
  <li> θα αναπτύξουν δεξιότητα στην επίλυση προβλημάτων με υπολογιστές,</li>
  <li> θα ασκηθούν στη σχεδίαση και υλοποίηση ευανάγνωστων, τεκμηριωμένων και 
    αποδοτικών προγραμμάτων,</li>
  <li> θα ελέγχουν την ορθότητα των προγραμμάτων και την καταλληλότητά τους σε 
    σχέση με το πρόβλημα και το χρήστη,</li>
  <li> θα γνωρίσουν το συντακτικό και θα κατανοήσουν τη σημασιολογία των τυπικών 
    προγραμματιστικών δομών, όπως η ανάθεση, η επιλογή, η επανάληψη,</li>
  <li> θα γνωρίσουν τους βασικούς τύπους δεδομένων και τη δυνατότητα ορισμού νέων, 
  </li>
  <li> θα κατανοήσουν τη χρήση απλών δομών δεδομένων, όπως πίνακες, διανύσματα, 
    συλλογές, </li>
  <li> θα γνωρίζουν το μηχανισμό ορισμού, έγερσης και εξυπηρέτησης εξαιρέσεων,</li>
  <li> θα αναπτύσσουν γραφικές διεπαφές για κλασικές εφαρμογές και για εφαρμογίδια 
    (applets) που εκτελούνται ενσωματωμένα σε ιστοσελίδες,</li>
  <li> θα εισαχθούν στον αντικειμενοστρεφή προγραμματισμό με τον ορισμό κλάσεων 
    και των ιδιοτήτων τους, τη στιγμιοποίηση (instantiation) αντικειμένων και 
    την ανταλλαγή μηνυμάτων,</li>
  <li>θα εφαρμόζουν τις αρχές της αντικειμενοστρεφούς σχεδίασης, όπως η ενθυλάκωση 
    (encapsulation), ο πολυμορφισμός και η κληρονομικότητα, και τέλος</li>
  <li> θα αποκτήσουν αίσθηση της πολυπλοκότητας των λειτουργιών ενός αλγορίθμου.</li>
</ul>
<p>Θα χρησιμοποιηθεί η γλώσσα προγραμματισμού Java. Η συγκεκριμένη γλώσσα λειτουργεί 
  ως όχημα για την κατανόηση των αρχών, εννοιών, τεχνικών και μεθόδων που περιγράφονται 
  στο μάθημα. Ωστόσο, οι φοιτητές θα αποκτήσουν τη δυνατότητα να εφαρμόζουν όλα 
  αυτά σε διάφορα περιβάλλοντα ανάπτυξης και γλώσσες. </p>
<h4> Ωρολόγιο Πρόγραμμα<a name="E2"></a></h4>
<p>Οι διαλέξεις του μαθήματος (θεωρία) γίνονται στην αίθουσα Παναγούλη του Πνευματικού 
  Κέντρου κάθε <strong>Δευτέρα 17.00-19.00</strong> και <strong>Παρασκευή 16.00-18.00</strong>. 
  Διδάσκει ο <a href="mailto:gaviotis@aegean.gr">Γιάννης Γαβιώτης</a>.</p>
<p>Τα εργαστήρια του μαθήματος γίνονται στα εργαστήρια υπολογιστών κάθε <strong>Παρασκευή 
  09.00-11.00</strong>. Υπεύθυνοι των εργαστηρίων είναι ο <a href="mailto:evlach@aegean.gr">Βαγγέλης 
  Βλαχογιάννης</a> (φοιτητές με άρτιο ΑΜ) και <a href="mailto:nviorres@aegean.gr">Νίκος 
  Βιορρές</a> (φοιτητές με περιττό ΑΜ).</p>
<h4>Αξιολόγηση<a name="E3"></a></h4>
<p>Οι φοιτητές αξιολογούνται με βάση τις ασκήσεις που θα παραδώσουν κατά τη διάρκεια του εξαμήνου (50%) και την τελική γραπτή εξέταση (50%). Οι <strong>ασκήσεις</strong> 
  βαθμολογούνται, εφόσον παραδοθούν εμπρόθεσμα. Τμήματα των ασκήσεων θα εξετάζονται κατά τη διεξαγωγή του εργαστηρίου. Οι βαθμοί των ασκήσεων δεν μεταφέρονται 
  σε επόμενα εξάμηνα. Στα εργαστήρια και σε παραδόσεις θεωρίας θα γίνονται πρόχειρα <strong>τεστ</strong> που θα προσμετρούν θετικά στην τελική βαθμολογία. 
</p>
<p>Στην τελική <strong>γραπτή εξέταση</strong> κάθε φοιτητής πρέπει να έχει μαζί του τις διαφάνειες, τις σημειώσεις και το βιβλίο του μαθήματος, καθώς και 
  ό,τι σημειώσεις θέλει να φέρει μαζί του. Δεν επιτρέπεται να δανειστεί υλικό από συνάδελφό του κατά τη διάρκεια της εξέτασης. Στη βιβλιοθήκη του τμήματος 
  θα βρείτε τα θέματα όλων των περασμένων ετών - προσπαθήστε να τα απαντήσετε και θα διαπιστώσετε πόσο καλά προετοιμασμένοι είστε για τη γραπτή εξέταση.</p>
<h4>Ύλη <a name="E4"></a></h4>
Φάσεις ανάπτυξης προγραμμάτων - Ενδιάμεση γλώσσα και ιδεατή μηχανή - Περιβάλλοντα ανάπτυξης - Ασφάλεια κώδικα που εκτελείται απομακρυσμένα - Σύγκριση μεταγλωττιστών 
και διερμηνευτών - Αναγνωσιμότητα, σχόλια, οδόντωση κώδικα - Συντάκτης κατευθυνόμενου συντακτικού<br>
Στρατηγικές επίλυσης προβλημάτων - Ο ρόλος των αλγορίθμων στη διαδικασία επίλυσης 
προβλημάτων - Στρατηγικές υλοποίησης για αλγόριθμους - Εκσφαλμάτωση - Τεκμηρίωση<br>
Βασικό συντακτικό και σημασιολογία γλωσσών υψηλού επιπέδου - Μεταβλητές, σταθερές, 
τύποι δεδομένων, παραστάσεις, ανάθεση - Απλή είσοδος / έξοδος - Δομές ελέγχου 
επιλογής και επανάληψης - Πίνακες - Αντικείμενα - Συμβολοσειρές, επεξεργασία συμβολοσειρών 
<br>
Μηχανισμοί αφαίρεσης - Βαθμιαία αποδόμηση - Μέθοδοι και πέρασμα παραμέτρων - Αντικειμενοστρεφής 
σχεδίαση - Κλάσεις, αντικείμενα, ιδιότητες, μέθοδοι - Ενθυλάκωση και απόκρυψη 
πληροφορίας - Διαχωρισμός συμπεριφοράς και υλοποίησης - Κατασκευαστές, μέθοδοι 
ανάγνωσης / εγγραφής - Κληρονομικότητα - Πολυμορφισμός<br>
Εκχώρηση μνήμης, συλλογή απορριμμάτων - Διάρκεια ζωής, εμβέλεια ονομάτων - Αναδρομή, 
αναδρομικές μαθηματικές συναρτήσεις, στρατηγική «διαίρει και βασίλευε»<br>
Εφαρμογίδια - Στοιχεία γραφικής διεπαφής χρήστη - Μέθοδοι χειρισμού συμβάντων 
- Μετάδοση συμβάντων<br>
<br>
<h4>Υπόβαθρο<a name="E5"></a></h4>
Οι φοιτητές πρέπει να έχουν τις βασικές γνώσεις για υπολογιστές, το Διαδίκτυο και προγραμματισμό. Τα σχετικά μαθήματα είναι «Πληροφορική Ι» (1151), «Πληροφορική 
ΙΙ» (2152) και «Τεχνολογίες Μεθοδολογίες Προγραμματισμού Ι» (3150). Ειδικότερα, θα πρέπει να γνωρίζουν τις έννοιες μεταβλητών, σταθερών και τύπων δεδομένων, 
τη σημασιολογία των τυπικών δομών ελέγχου (if-then-else, for, while, select) και τις αρχές του δομημένου προγραμματισμού (ορισμός &amp; κλήση υποπρογραμμάτων, 
πέρασμα παραμέτρων).<br>
<h4>Βιβλιογραφία<a name="E6"></a></h4>
<p>Στους φοιτητές διανέμεται το βιβλίο [18]. Ωστόσο, οι φοιτητές ενθαρρύνονται 
  να ανατρέχουν κατά περίπτωση και στις άλλες αναφορές που παρατίθενται.<br>
  <strong>1. David Barnes, Michael Koelling, Objects First with Java, 2nd ed., 
  Pearson, 2005, 0131249339, υλικό στο www.bluej.org </strong><br>
  <strong>2. Bruce Eckel, Thinking in Java, 3rd ed., 2002, downloadable from http://www.mindview.net/Books/TIJ/ 
  <br>
  </strong>3. David Harel, Algorithmics: the spirit of computing, 2nd ed., Addison 
  Wesley, 1992, 0-201-50401-4<br>
  <strong>4. Deitel &amp; Deitel, Java How to program, 3rd ed., Prentice Hall, 
  1999, 0-13-012507-5<br>
  </strong>5. Douglas Bell, Ian Morey, John Pugh, The essence of program design, 
  Prentice Hall, 1997, 0-13-367806-7<br>
  6. Ellis Horowitz, Βασικές αρχές γλωσσών προγραμματισμού, 2η έκδοση, Κλειδάριθμος, 
  1993, 960-209-190-6<br>
  7. J. Glenn Brookshear, Computer Science, an overview, 6th ed., Addison Wesley, 
  2000, 0-201-35747-X<br>
  8. Kernigham, Plauger, The elements of programming style, McGraw-Hill, 2nd ed, 
  1978<br>
  9. M. Bohl, M. Rynn, Tools for structured design: an introduction to programming 
  logic, 5th ed., Prentice-Hall, 2001, 0-13-020037-9<br>
  10. Maureen Sprankle, Problem solving and programming concepts, 5th ed., Prentice 
  Hall, 2001, 0-13-022967-9<br>
  11. P. H. Winston, S. Narasimhan, On to Java 1.2, 2nd ed., Addison Wesley, 1998, 
  0-201-38598-8<br>
  12. Ravi Sethi, Programming languages, 2nd ed., Addison Wesley, 1996, 0-201-59065-4<br>
  13. Ravi Sethi, Programming Languages: Concepts and Constructs, 2nd ed., Addison 
  Wesley, 1996, 0-201-59065-4<br>
  14. Robert W. Sebesta, Concepts of Programming Languages, 5th ed., Addison Wesley, 
  2001, 0-201-75295-6<br>
  15. Roger Graham, The synergy of hardware and software, Prentice Hall, 1998, 
  0-13-145617-2<br>
  16. Stefano Ceri, Dino Mandrioli, Licia Sbattella, The art and craft of computing, 
  Addison Wesley, 1998, 0-201-87698-1<br>
  17. Terry Winograd, Bringing design to software, ACM Press, 2000, 0-201-85491-0<br>
  <em><strong>18. Γιώργος Λιακέας, Εισαγωγή στη Java 2, Κλειδάριθμος, 2003, 960-209-625-X</strong></em><br>
  <strong>19. John Hubbard, Schaum's Java Θεωρία και προβλήματα, Κλειδάριθμος, 
  2005, 960-209-737-Χ<br>
  </strong>20. Ι. Ανδρεάδης, Μια σύντομη αναδρομή στην τεχνολογία των ηλεκτρονικών 
  υπολογιστών, Δελτίο ΠΣΔΜ-Η, σελ. 48-52, Ιούλιος - Αύγουστος 2001<br>
  21. Ι. Κάβουρα, Δομημένος προγραμματισμός με Pascal, Κλειδάριθμος, 1997, 960-209-308-0<br>
  22. ΥΠΕΠΘ, Ανάπτυξη εφαρμογών σε προγραμματιστικό περιβάλλον, 1999, 960-7251-23-7<br>
  23. Sartaj Sahni, Data Structures, algorithms and applications in Java, McGraw-Hill, 
  2000, 0-07-109217-X<br>
  24. John Lewis, William Loftus, Java software solutions: Foundations of program 
  design, Addison-Wesley, 1998, 0-201-57164-1<br>
  25. John Hunt, Java and object-orientation, Springer-Verlag, 1997, 3-540-76201-9<br>
  26. Steven Haines, Οδηγός της Java2, Β. Γκιούρδας, 960-387-041-2<br>
  27. Greg Perry, Εισαγωγή στον προγραμματισμό, Μ. Γκιούρδας, 960-512-33-9<br>
  28. John Satzinger, Tore Orvik, The object-oriented approach, 2nd ed., Course 
  Technology, 2001, 0-619-03390-8</p>
<h4>Πηγές στο Διαδίκτυο<a name="E7"></a></h4>
<p>1. http://www.it.uom.gr/project/java/tutorial.htm Διδακτικό βοήθημα στα ελληνικά 
  (Πανεπιστήμιο Μακεδονίας)<br>
  2. http://chortle.ccsu.ctstateu.edu/CS151/cs151java.html Άφθονο διδακτικό υλικό, 
  κουιζ και ασκήσεις. Ευρύτητα κά-λυψης.<br>
  3. http://www.faqs.org/docs/javap/index.html Ηλεκτρονικό βιβλίο για προγραμματισμό 
  σε Java με κουιζ και ασκήσεις.<br>
  4. http://www.tipsmart.com/javacert/ptp/basics.htm Κουιζ για τα βασικά της Java<br>
  5. http://alpha.physics.uoi.gr/web_kokkas_java/java_lang.htm Εκπαιδευτικό υλικό 
  για Java (Πανεπιστήμιο Ιωαννίνων)<br>
  6. http://users.ntua.gr/ge04060/java.htm Ιστοσελίδα μαθήματος από το Μετσόβιο 
  Πολυτεχνείο που χρησιμοποιεί το BlueJ<br>
  7. http://www.cs.teilar.gr/gkakaron/java/Index.html Μαθήματα Java από το ΤΕΙ 
  Λάρισας<br>

</body>
</html>
