<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Ασκήσεις μαθήματος 'Αλγόριθμοι, Δομές Δεδομένων'</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-7">
</head>
<link href="ADD.css" rel="stylesheet" type="text/css">
<body>
<p><strong>Ασκήσεις: <a href="#">1</a> <a href="#A2">2</a> <a href="#A3">3</a> 
  <a href="#A4">4</a> <a href="#A5">5</a> <a href="#A6">6</a><em><font color="#660066"> 
  - </font></em></strong><strong><em><font color="#660066">ΜΗΝ ΑΝΤΙΓΡΑΨΕΤΕ</font></em></strong><font color="#660066"><em> 
  - Κινδυνεύετε να χάσετε όλο το μάθημα- Διαβάστε <a href="../Collabor.htm">Οδηγίες 
  και Ποινές</a></em></font></p>
<p>Δείτε <a href="../AskLog.htm">οδηγίες για υποβολή ασκήσεων που περιλαμβάνουν 
  λογισμικό</a>.</p>
<p><strong><a name="A1"></a>Άσκηση 1<sup>η</sup> </strong>- Ανακοινώθηκε την 20/11/2006 
  - μετράει για 20% του τελικού βαθμού - παραδοτέα μέχρι 20/12/2006</p>
<p>Για να βρούμε το μέγιστο κοινό διαιρέτη δύο ακεραίων υπάρχουν διάφοροι αλγόριθμοι. 
  Ο πιο απλός, ας τον ονομάσουμε Α, χρησιμοποιεί διαδοχικές αφαιρέσεις, πχ ΜΚΔ(66,36) 
  = ΜΚΔ(36,30) = ΜΚΔ(30,6) =  = ΜΚΔ(12,6) = ΜΚΔ(6,6 ) =ΜΚΔ(6,0) = 6. Ο αλγόριθμος 
  του Ευκλείδη, ας τον πούμε Ε, χρησιμοποιεί το υπόλοιπο από τις ακέραιες διαιρέσεις, 
  πχ ΜΚΔ(66,36) = ΜΚΔ(36,30) = ΜΚΔ(30,6) = ΜΚΔ(6,0) = 6. Συγκρίνετε τους δύο παραπάνω 
  αλγορίθμους με τον αλγόριθμο Μ (Joseph Stein, 1967) που χρησιμοποιεί αφαιρέσεις, 
  έλεγχο ενός bit, και υποδιπλασιασμό:</p>
<p align="center"><img src="gcd.JPG" width="777" height="198"></p>
<p align="center">Η αναδρομή εφαρμόζεται μέχρι κάποιο από τα α,b να γίνει μηδέν, 
  πχ ΜΚΔ(66,36) = 2.ΜΚΔ(33,18) = 2.ΜΚΔ(33,9) = 2.ΜΚΔ(21,12) = 2.ΜΚΔ(21,6) = 2.ΜΚΔ(21,3) 
  = 2.ΜΚΔ(12,9) = 2.ΜΚΔ(6,9) = 2.ΜΚΔ(3,9) = 2.ΜΚΔ(6,3) = 2.ΜΚΔ(3,3) = 2.ΜΚΔ(3,0) 
  = 2.3 = 6.</p>
<p align="center">Μετρήστε ξεχωριστά τις εξής κατηγορίες πράξεων: (α) έλεγχος 
  για άρτιο/περιττό, διαίρεση δια δύο, (β) προσθαφαίρεση, και (γ) πολλαπλασιασμός, 
  υπόλοιπο ακέραιας διαίρεσης. Για μια καλή κάλυψη των αλγορίθμων ΜΚΔ δείτε D. 
  Knuth, The Art of Computer programming, vol. 2, pp. 333-341. </p>
<p align="center">Για τη σύγκριση θα καλείτε τον κάθε αλγόριθμο έτσι ώστε να υπολογίσει 
  (χωρίς να τυπώσει) όλους τους ΜΚΔ όλων των δυνατών ζευγών (x,y) όπου τα x,y 
  είναι μεταξύ 1 και 1000. Σε πρώτη φάση θα χρονομετρήσετε τους αλγορίθμους Α, 
  Ε, Μ και σε δεύτερη φάση θα μετρήσετε τις πράξεις που εκτελούν.</p>
<hr width="62%">
<p><strong><a name="A2"></a>Άσκηση 2<sup>η</sup></strong>- Ανακοινώθηκε την 5/12/2006 
  - μετράει για 20% του τελικού βαθμού- παραδοτέα μέχρι 10/1/2007</p>
<p>Φτιάξτε πρόγραμμα που θα επιτρέπει στον χρήστη να προδιαγράψει ένα δέντρο και 
  θα κατασκευάζει μια δομή δεδομένων που αντιστοιχεί σε αυτό το δέντρο. Το πρόγραμμά 
  σας θα έχει οδηγίες για τον τρόπο που θα εισάγει ο χρήστης το δέντρο. Μετά την 
  κατασκευή του δέντρου, το πρόγραμμα θα δίνει τη δυνατότητα τροποποίησής του 
  με την προσθήκη ή αφαίρεση κόμβων του. Επίσης θα φτιάξετε ένα τρόπο εκτύπωσης 
  του δέντρου ως συμβολοσειράς. Τέλος, φτιάξτε μέθοδο που θα υπολογίζει το συντελεστή 
  ισορροπίας ενός κόμβου.</p>
<hr width="62%">
<p><strong><a name="A3"></a>Άσκηση 3<sup>η</sup></strong>- Ανακοινώθηκε την 18/11/2005 
  - μετράει για 30% του τελικού βαθμού - παραδοτέα μέχρι 20 /1/2007</p>
<table width="100%" border="0">
  <tr> 
    <td width="75%"><p>(α) Φτιάξτε και δημοσιεύσετε εφαρμογίδιο (applet) που θα 
        σχεδιάζει δυαδικά δέντρα. Θα παίρνει ως είσοδο ένα δέντρο, όπως το έχετε 
        προδιαγράψει στην προηγούμενη άσκηση και θα παράγει ως έξοδο σχέδιο που 
        θα αποτελείται από κύκλους μέσα στους οποίους θα βρίσκονται οι τιμές των 
        κόμβων και ευθείες που θα συνδέουν τους κύκλους. Η τετμημένη του κόμβου 
        θα υπολογίζεται με βάση τον αριθμό του κόμβου κατά μια εσωδιάταξη του 
        δέντρου. Η τεταγμένη θα υπολογίζεται χρησιμοποιώντας το αντίθετο του βάθους 
        του κόμβου στο δέντρο. </p>
      <p> (β1) Χρησιμοποιώντας το εφαρμογίδιο, σχεδιάστε το Δυαδικό Δέντρο Αναζήτησης 
        (ΔΔΑ) που δημιουργείται εισάγοντας τα στοιχεία P, R, F, H, N, S, C, J, 
        W, M, U, L με αυτή τη σειρά. (β2) Ποιο είναι το μικρότερο βάθος που θα 
        μπορούσε να έχει ένα ΔΔΑ με τόσους κόμβους; (β3) Σχεδιάστε ένα τέτοιο 
        δέντρο για τα στοιχεία του ερωτήματος και αναφέρετε μια σειρά με την οποία 
        πρέπει να εισαχθούν τα στοιχεία για να προκύψει το συγκεκριμένο ΔΔΑ. Σχεδιάστε 
        το δέντρο που θα προκύψει εκτελώντας διαδοχικά remove(H), remove(P), remove(R), 
        remove(J) στο δέντρο του ερωτήματος (β1). </p>
      <p>(γ)Κάντε τα παραπάνω για δέντρο σωρού αντί για ΔΔΑ.</p>
      </td>
    <td width="25%"><img src="btree.GIF" alt="" width="238" height="214" align="right"> 
    </td>
  </tr>
</table>
<p>&nbsp;</p>
<hr width="62%">
<p><strong><a name="A4"></a>Άσκηση 4<sup>η</sup></strong>- Μετράει για 30% του 
  τελικού βαθμού - Παραδοτέα μέχρι 23/12/2007</p>
<hr width="62%">
<p><strong><a name="A6"></a>Άσκηση μπαλαντέρ</strong>- Μπορεί να αντικαταστήσει 
  οποιαδήποτε από τις υπόλοιπες ασκήσεις</p>
<p>Καθένας από n γιατρούς πρέπει να χειρουργήσει χωριστά καθένα από n ασθενείς. 
  Ωστόσο οι χειρούργοι δε θέλουν να κολλήσουν τις αρρώστιες των ασθενών τους, 
  ούτε θέλουν να μολύνουν κάποιον ασθενή με την αρρώστια κάποιου άλλου ασθενή. 
  Οι διαδικαστικοί κανόνες στην κλινική απαιτούν ότι καμιά επιφάνεια γαντιού την 
  οποία έχει αγγίξει ένας γιατρός δε θα πρέπει να αγγίξει κάποιο ασθενή. Υποθέστε 
  επίσης ότι κάθε χειρούργος αρνείται να αγγίξει μία επιφάνεια γαντιού την οποία 
  έχει αγγίξει κάποιος χειρούργος. <br>
  a. Δείξτε ότι δύο χειρούργοι μπορούν να εγχειρίσουν δύο ασθενείς χρησιμοποιώντας 
  μόνο δύο χειρουργικά γάντια συνολικά. (Υπόδειξη: Τα χειρουργικά γάντια είναι 
  κατασκευασμένα από λάστιχο και άρα μπορούν να αντιστραφούν  δηλαδή να γυρίσει 
  το μέσα έξω.)<br>
  b. Ποιος είναι ο ελάχιστος αριθμός χειρουργικών γαντιών που απαιτούνται για 
  να γίνουν n<sup>2</sup> εγχειρήσεις.<br>
  c. Αποδείξτε ότι ο αλγόριθμός σας είναι βέλτιστος.<br>
</p>
</body>
</html>
