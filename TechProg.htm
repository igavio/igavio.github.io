<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 TRANSITIONAL//en">
<HTML>
<HEAD>
<TITLE> Τεχνολογίες και Μεθοδολογίες Προγραμματισμού </TITLE>
<LINK REL=stylesheet TYPE="text/css" HREF=MyCss.css>
</HEAD>
<BODY BGCOLOR="#F7BDDE">
<H2>Οργάνωση μαθήματος</H2>
Το μάθημα είναι δομημένο σε δύο τμήματα που διδάσκονται στο β' εξάμηνο (κωδ. <A HREF="https://igavio.github.io/TechProg.htm">3152</A> 
στο πρόγραμμα σπουδών) και στο δ' εξάμηνο (κωδ. <A HREF="https://igavio.github.io/TMP2/Default.htm">4201</A> 
στο πρόγραμμα σπουδών). 
<UL>
  <LI><A HREF=#Perigrafi>Περιγραφή του μαθήματος</A> 
  <LI><A HREF=#Gnostiko>Γνωστικό πεδίο</A> 
  <LI><A HREF=#Themata>Θέματα</A> 
  <LI><A HREF=#Stoxoi>Στόχοι</A> 
  <LI><A HREF=#Prosegish>Εκπαιδευτική προσέγγιση</A> 
  <LI><A HREF=#Ergasthrio>Εργαστήριο</A> 
  <LI><A HREF=#Bibliografia>Βιβλιογραφία</A> 
</UL>
<HR WIDTH="60%">
<H2><A NAME="Perigrafi">Περιγραφή</A></H2>
<P>Το μάθημα αυτό έχει στόχο να διδάξει στους φοιτητές πώς να λύνουν προβλήματα 
  χρησιμοποιώντας υπολογιστές και να τους εισάγει στον προγραμματισμό, ενθαρρύνοντας 
  καλές τεχνικές ανάπτυξης. Προϋποθέτει βασικές γνώσεις οργάνωσης και λειτουργίας 
  υπολογιστικών συστημάτων που αποκτήθηκαν στο μάθημα «Πληροφορική» του α΄ έτους.</P>
<P>Η σχεδίαση προγραμμάτων διδάσκεται ανεξάρτητα από συγκεκριμένη γλώσσα προγραμματισμού. 
  Αναλύονται μεθοδικά διάφορα προβλήματα και αναπτύσσεται η λύση τους, εκφρασμένη 
  έτσι ώστε να μπορεί να εκτελεστεί από υπολογιστή. Διαγράμματα ροής και ψευδοκώδικας 
  χρησιμοποιούνται για την αρχική έκφραση της λύσης με σαφήνεια και ελεγξιμότητα.</P>
<P>Όσο η λύση γίνεται πιο πολύπλοκη, καθίσταται αναγκαία η χρήση τεχνικών βαθμιαίας 
  αποδόμησης κατά το πρότυπο του δομημένου προγραμματισμού και της αντικειμενοστρεφούς 
  σχεδίασης και υλοποίησης. Εξετάζεται ο μεθοδικός μετασχηματισμός των αναλυτικών 
  προδιαγραφών σε δομημένες λύσεις. Επίσης, περιγράφεται το μοντέλο του οδηγούμενου 
  από συμβάντα υπολογισμού σε σχέση με γραφικά περιβάλλοντα.</P>
<P>Για να κατανοηθούν οι αρχές και οι τεχνικές που περιγράφονται στις διαλέξεις 
  του μαθήματος και για να αποκτήσουν οι φοιτητές πρακτική εμπειρία, στα εργαστήρια 
  έρχονται σε επαφή με συγκεκριμένες γλώσσες και περιβάλλοντα προγραμματισμού, 
  όπως η Visual Basic και η Java. Εκτός από τη σύνταξη προγραμμάτων, στα εργαστήρια 
  περιγράφεται η χρήση συντακτών κατευθυνόμενου συντακτικού (syntax-directed editors), 
  εργαλείων εκσφαλμάτωσης (debugging tools) και προκατασκευασμένων χειριστηρίων 
  (component-based programming).</P>
<HR WIDTH="60%">
<H2><A NAME="Gnostiko">Γνωστικό πεδίο</A></H2>
<P>Στην ενότητα αυτή περιγράφεται το θεματικό αντικείμενο για το μάθημα ακολουθώντας 
  την κατηγοριοποίηση του πιο πρόσφατου Computing Curriculum (The Joint Task Force 
  on Computing Curricula (IEEE & ACM), Computing Curricula 2001 - Computer Science, 
  <A HREF="http://www.computer.org/education/cc2001/final/index.htm">Steelman 
  report</A>, final draft version, Dec. 15, 2001). Κατά κύριο λόγο το μάθημα καλύπτει 
  τα γνωστικά πεδία που έχουν κωδικοποιηθεί ως PF (Programming Fundamentals) και 
  PL (Programming Languages). Πιο συγκεκριμένα, το πεδίο γνώσης PF καλύπτεται 
  καθ' ολοκληρίαν (PF1-PF5), ενώ το PL καλύπτεται μερικώς (PL1-PL6). Σημειώνουμε 
  ότι όλα τα πεδία που είναι ενταγμένα στο μάθημα αναγνωρίζονται από την αναφορά 
  Steelman ως ύλη κορμού.</P>
<TABLE BORDER="1" CELLSPACING="1" CELLPADDING="1">
  <TR>
    <TD><B>PF</B></TD>
    <TD><B> Programming Fundamentals</B></TD>
    <TD><B>Εισαγωγή στον προγραμματισμό</B></TD>
    <TD ALIGN="center"><B>38 ώρες</B></TD>
  </TR>
  <TR>
    <TD>PF1</TD>
    <TD>Fundamental programming constructs</TD>
    <TD>Βασικές δομές προγραμματισμού</TD>
    <TD ALIGN="center">9</TD>
  </TR>
  <TR>
    <TD>PF2</TD>
    <TD>Algorithms and problem-solving</TD>
    <TD>Αλγόριθμοι και επίλυση προβλημάτων</TD>
    <TD ALIGN="center">6</TD>
  </TR>
  <TR>
    <TD>PF3</TD>
    <TD>Fundamental data structures</TD>
    <TD>Βασικές δομές δεδομένων</TD>
    <TD ALIGN="center">14</TD>
  </TR>
  <TR>
    <TD>PF4</TD>
    <TD>Recursion</TD>
    <TD>Αναδρομή</TD>
    <TD ALIGN="center">5</TD>
  </TR>
</TABLE>
<P></P>
<TABLE BORDER="1" CELLSPACING="1" CELLPADDING="1">
  <TR>
    <TD><B>PL</B></TD>
    <TD><B>Programming Languages</B></TD>
    <TD><B>Γλώσσες προγραμματισμού</B></TD>
    <TD><B>21 ώρες</B></TD>
  </TR>
  <TR>
    <TD>PL1</TD>
    <TD>Overview of programming languages</TD>
    <TD>Επισκόπηση των γλωσσών προγραμματισμού</TD>
    <TD>2</TD>
  </TR>
  <TR>
    <TD>PL2</TD>
    <TD>Virtual machines</TD>
    <TD>Ιδεατές μηχανές</TD>
    <TD>1</TD>
  </TR>
  <TR>
    <TD>PL3</TD>
    <TD>Introduction to language translation</TD>
    <TD>Εισαγωγή στην μετάφραση γλωσσών</TD>
    <TD>2</TD>
  </TR>
  <TR>
    <TD>PL4</TD>
    <TD>Declarations and types</TD>
    <TD>Δηλώσεις και τύποι</TD>
    <TD>3</TD>
  </TR>
  <TR>
    <TD>PL5</TD>
    <TD>Abstraction mechanisms</TD>
    <TD>Μηχανισμοί αφαίρεσης</TD>
    <TD>3</TD>
  </TR>
  <TR>
    <TD>PL6</TD>
    <TD>Object-oriented programming</TD>
    <TD>Αντικειμενοστρεφής προγραμματισμός</TD>
    <TD>10</TD>
  </TR>
</TABLE>
<HR WIDTH="60%">
<H2><A NAME="Themata">Θέματα</A></H2>
<TABLE BORDER="1" CELLSPACING="1" CELLPADDING="1">
  <TR>
    <TD><B>PF1</B></TD>
    <TD>Βασικό συντακτικό και σημειολογία γλωσσών υψηλού επιπέδου<BR>
      Μεταβλητές, τύποι, παραστάσεις και ανάθεση<BR>
      Απλή είσοδος / έξοδος<BR>
      Δομές ελέγχου επιλογής και επανάληψης<BR>
      Συναρτήσεις και πέρασμα παραμέτρων<BR>
      Δομημένη αποδόμηση</TD>
  </TR>
  <TR>
    <TD><B>PF2</B></TD>
    <TD>Στρατηγικές επίλυσης προβλημάτων<BR>
      Ο ρόλος των αλγορίθμων στη διαδικασία επίλυσης προβλημάτων<BR>
      Στρατηγικές υλοποίησης για αλγόριθμους<BR>
      Στρατηγικές εκσφαλμάτωσης<BR>
      Η έννοια και οι ιδιότητες του αλγορίθμου<BR></TD>
  </TR>
  <TR>
    <TD><B>PF3</B></TD>
    <TD>Βασικοί τύποι<BR>
      Πίνακες<BR>
      Εγγραφές<BR>
      Συμβολοσειρές και επεξεργασία συμβολοσειρών<BR>
      Αναπαράσταση δεδομένων στη μνήμη<BR>
      Εκχώρηση μνήμης στατικά, με στοίβα (stack) και με σωρό (heap)<BR> 
  <TR>
    <TD><B>PF4</B></TD>
    <TD>Η έννοια της αναδρομής<BR>
      Αναδρομικές μαθηματικές συναρτήσεις<BR>
      Απλές αναδρομικές διαδικασίες<BR>
      Στρατηγικές "διαίρει και βασίλευε"<BR></TD>
  </TR>
  <TR>
    <TD><B>PF5</B></TD>
    <TD>Μέθοδοι χειρισμού συμβάντων<BR>
      Μετάδοση συμβάντων</TD>
  </TR>
</TABLE>
<P> </P>
<TABLE BORDER="1" CELLSPACING="1" CELLPADDING="1">
  <TR>
    <TD><B>PL1</B></TD>
    <TD>Ιστορία των γλωσσών προγραμματισμού<BR>
      Συνοπτική επισκόπηση των προτύπων προγραμματισμού<BR>
      - Διαδικαστικές γλώσσες<BR>
      - Αντικειμενοστρεφείς γλώσσες<BR>
      - Λειτουργικές γλώσσες<BR>
      - Δηλωτικές, μη-αλγοριθμικές γλώσσες<BR>
      Τα αποτελέσματα της κλίμακας στην προγραμματιστική μεθοδολογία</TD>
  </TR>
  <TR>
    <TD><B>PL2</B></TD>
    <TD>Η έννοια της ιδεατής μηχανής<BR>
      Ιεραρχία ιδεατών μηχανών<BR>
      Ενδιάμεσες γλώσσες<BR>
      Ζητήματα ασφαλείας κώδικα που εκτελείται απομακρυσμένα</TD>
  </TR>
  <TR>
    <TD><B>PL3</B></TD>
    <TD>Σύγκριση μεταγλωττιστών και διερμηνευτών</TD>
  </TR>
  <TR>
    <TD><B>PL4</B></TD>
    <TD>Η έννοια των τύπων ως σύνολο τιμών μαζί με σύνολο λειτουργιών<BR>
      Έλεγχος τύπων<BR>
      Συλλογή απορριμμάτων</TD>
  </TR>
  <TR>
    <TD><B>PL5</B></TD>
    <TD>Διαδικασίες, συναρτήσεις ως μηχανισμοί αφαίρεσης<BR>
      Μηχανισμοί παραμέτρων (αναφορά, τιμή)<BR>
      Αρθρώματα στις γλώσσες προγραμματισμού</TD>
  </TR>
  <TR>
    <TD><B>PL6</B></TD>
    <TD>Αντικειμενοστρεφής σχεδίαση<BR>
      Ενθυλάκωση και απόκρυψη πληροφορίας<BR>
      Διαχωρισμός συμπεριφοράς και υλοποίησης<BR>
      Κλάσεις και υποκλάσεις<BR>
      Κληρονομικότητα (υπερφόρτωση)<BR>
      Πολυμορφισμός</TD>
  </TR>
</TABLE>
<HR WIDTH="60%">
<H2><A NAME="Stoxoi">Στόχοι</A></H2>
<P>Οι φοιτητές που θα ολοκληρώσουν αυτό το μάθημα: </P>
<UL>
  <LI>θα αναπτύξουν δεξιότητα στην επίλυση προβλημάτων με υπολογιστές, 
  <LI>θα γνωρίσουν το συντακτικό και τη σημασιολογία των τυπικών προγραμματιστικών 
    δομών, όπως η ανάθεση, η επιλογή, η επανάληψη, 
  <LI>θα γνωρίζουν να σχεδιάζουν και υλοποιούν ευανάγνωστα και αποδοτικά προγράμματα, 
  <LI>θα ελέγχουν την ορθότητα των προγραμμάτων και την καταλληλότητά τους σε 
    σχέση με το πρόβλημα και το χρήστη, 
  <LI>θα γνωρίσουν τους βασικούς τύπους δεδομένων και τη δυνατότητα ορισμού νέων 
    με χρήση δηλωτικών εντολών, 
  <LI>θα κατανοούν τις βασικές αρχές του δομημένου προγραμματισμού, όπως η σταδιακή 
    εκλέπτυνση (step-wise refinement), ο ορισμός και η κλήση διαδικασιών, 
  <LI>θα κατανοούν τις βασικές αρχές του αντικειμενοστραφή προγραμματισμού και 
    σχεδίασης, όπως οι κλάσεις, η απόκρυψη πληροφορίας και η κληρονομικότητα, 
  <LI>θα έχουν κατανοήσει τη χρήση απλών δομών δεδομένων, όπως πίνακες, διανύσματα, 
    στοίβες, σωροί, ουρές, 
  <LI>θα αποκτήσουν αίσθηση της πολυπλοκότητας των λειτουργιών ενός αλγορίθμου, 
    και τέλος 
  <LI>εκτός από επιτακτικές (imperative) γλώσσες προγραμματισμού, θα γνωρίσουν 
    τον συναρτησιακό (functional) και τον λογικό προγραμματισμό. 
</UL>
<P>Δεν είναι στόχος του μαθήματος απλώς η εκμάθηση της σύνταξης μιας ή δύο γλωσσών 
  προγραμματισμού. Συγκεκριμένες γλώσσες χρησιμοποιούνται για να κατανοήσουν οι 
  φοιτητές τις αρχές, τεχνικές και μεθόδους που περιγράφονται στο μάθημα, ωστόσο 
  θα πρέπει να έχουν τη δυνατότητα να τα εφαρμόσουν αυτά σε διάφορα περιβάλλοντα 
  ανάπτυξης και γλώσσες.</P>
<HR WIDTH="60%">
<H2><A NAME="Prosegish">Εκπαιδευτική προσέγγιση</A></H2>
<P>Παρατίθεται προσαρμοσμένο απόσπασμα από το βιβλίο [9]:</P>
<P>... Εισαγωγικά μαθήματα στην επιστήμη των υπολογιστών μπορεί να δίνουν έμφαση 
  είτε στις έννοιες και τη θεωρία, ή στην προγραμματιστική πρακτική, ή στην αρχιτεκτονική 
  των υπολογιστών, ή στην τεχνολογία λογισμικού, κοκ. Οι φοιτητές που σπουδάζουν 
  επιστήμη των υπολογιστών ή πληροφορική αργά ή γρήγορα θα εκτεθούν σε όλα αυτά 
  τα θέματα και θα αποκτήσουν μια ισορροπημένη άποψη για όλα αυτά. Ωστόσο, τώρα 
  μαθήματα στους υπολογιστές διδάσκονται σε φοιτητές από άλλους κλάδους, όπως 
  μαθηματικούς, φυσικούς, μηχανικούς, ενώ η τάση είναι να διδάσκονται ακόμη και 
  σε φοιτητές ανθρωπιστικών επιστημών. Αυτοί οι φοιτητές συνήθως έχουν ένα ή δύο 
  μαθήματα σε υπολογιστές. Έτσι είναι πιθανό να αποκτήσουν μια μη ισορροπημένη 
  άποψη ως αποτέλεσμα της περιορισμένης τους εμπειρίας. Μπορεί να μάθουν να προγραμματίζουν 
  έναν υπολογιστή, αλλά να μην γνωρίσουν πώς λειτουργεί. Ή μπορεί να κατανοήσουν 
  την εσωτερική αρχιτεκτονική των ολοκληρωμένων κυκλωμάτων, αλλά να μην συνδέσουν 
  την γνώση τους με γλώσσες προγραμματισμού υψηλού επιπέδου. Η απουσία μιας "συνολικής 
  εποπτείας" αφήνει στους φοιτητές την εντύπωση ότι πολλά ανεξήγητα χαρακτηριστικά 
  της επιστήμης των υπολογιστών είναι "μαγικά". [...] Εκπαιδευτικός μας στόχος 
  είναι να βοηθήσουμε φοιτητές που δεν ειδικεύονται στην επιστήμη των υπολογιστών, 
  να κατανοήσουν τους υπολογιστές συνολικά.</P>
<P>Η προσέγγιση που ακολουθούμε ξεκίνησε με περιγραφές των βασικών συστατικών 
  και έπειτα περιγράφεται η λειτουργικότητα που μπορούν να προσφέρουν αυτά τα 
  συστατικά. Βαθμιαία περιγράφονται όλο και πιο πολύπλοκες λειτουργίες. Οι φοιτητές 
  μαθαίνουν για αλγορίθμους, τη δομή της μηχανής και τη δομή των προγραμμάτων 
  κι έτσι κατανοούν την εκτέλεση του πρώτου προγράμματος που γράφουν. Όταν πληκτρολογούν 
  κάτι και διαβάζουν ένα μήνυμα καταλαβαίνουν τι συνέβη στη μηχανή και πώς παράχθηκε 
  αυτό το αποτέλεσμα. Θέλουμε οι φοιτητές να αντιληφθούν ότι οι υπολογιστές δεν 
  έχουν τίποτα το μαγικό ή ανεξήγητο [...]</P>
<P>Παρότι κατά κύριο λόγο ακολουθείται η προσέγγιση που περιγράφθηκε πρωτύτερα, 
  σε ορισμένα σημεία ακολουθείται η ακριβώς αντίθετη μεθοδολογία, δηλαδή μια έννοια 
  παρουσιάζεται μέσω ενός προγράμματος και της εκτέλεσής του, χωρίς να έχει προηγηθεί 
  θεωρητική παρουσίαση και ανάλυση. Η μέθοδος αυτή κυρίως χρησιμοποιείται όταν 
  οι φοιτητές έχουν κατανοήσει τα βασικά στοιχεία του προγραμματισμού και έχουν 
  εξοικειωθεί με τις βασικές γλωσσικές δομές. Σε αυτή την περίπτωση, ο φορμαλισμός 
  της ίδιας της γλώσσας χρησιμοποιείται ως εργαλείο για την πληρέστερη κατανόηση 
  των νέων εννοιών που εισάγονται.</P>
<HR WIDTH="60%">
<H2><A NAME="Ergasthrio">Εργαστήριο</A></H2>
<P>Στο εργαστήριο οι φοιτητές χωρίζονται σε δύο ομάδες από τους υπεύθυνους, οι 
  οποίοι καθοδηγούν σε ασκήσεις που εφαρμόζουν τις αρχές που διδάχθηκαν στις διαλέξεις. 
  Εάν ο φοιτητής δεν μπορεί να κάνει αυτό που ζητήθηκε, πρώτα ρωτάει τους γείτονες 
  του και έπειτα ζητάει βοήθεια από τον υπεύθυνο. Οι ερωτήσεις / παρατηρήσεις 
  των φοιτητών είναι σημαντικές γιατί μπορεί να αντιστοιχούν σε απορίες κι άλλων 
  συναδέλφων τους. Επίσης, υποδηλώνουν παρακολούθηση και ενεργό συμμετοχή. Όταν 
  κάποιος τελειώνει μια άσκηση, βλέπει εάν οι γείτονές του χρειάζονται βοήθεια, 
  ή αν έχουν ακολουθήσει διαφορετική προσέγγιση. Η συνεργασία των φοιτητών στα 
  εργαστήρια πρέπει να ενθαρρύνεται στο βαθμό που δεν δυσκολεύει το έργο του υπεύθυνου. 
  Στις παραδοτέες εργασίες που αξιολογούνται, η συνεργασία επιτρέπεται στο βαθμό 
  που πχ ανταλλάσσονται ιδέες ή τεχνικές, αλλά απαγορεύεται αυστηρά η αντιγραφή. 
  Σε περίπτωση αντιγραφής τιμωρούνται όλοι οι εμπλεκόμενοι.</P>
<P>Κατά τη διάρκεια του εργαστηρίου:</P>
<UL>
  <LI>Δίδονται προς λύση ή διερεύνηση προβλήματα που αντιστοιχούν στην ύλη του 
    μαθήματος. 
  <LI>Οι φοιτητές συγγραφούν και ελέγχουν ως προς τη σύνταξη και τη λογική προγράμματα. 
  <LI>Δίδεται βοήθεια για τις εργασίες που πρόκειται να παραδοθούν. 
</UL>
<HR WIDTH="60%">
<H2><A NAME="Bibliografia">Βιβλιογραφία</A></H2>
<OL>
  <LI>M. Bohl, M. Rynn, Tools for structured design: an introduction to programming 
    logic, 5th ed., Prentice-Hall, 2001, 0-13-020037-9 
  <LI>Maureen Sprankle, Problem solving and programming concepts, 5th ed., Prentice 
    Hall, 2001, 0-13-022967-9 
  <LI>Ellis Horowitz, Βασικές αρχές γλωσσών προγραμματισμού, 2η έκδοση, Κλειδάριθμος, 
    1993, 960-209-190-6 
  <LI>Ravi Sethi, Programming languages, 2nd ed., Addison Wesley, 1996, 0-201-59065-4 
  <LI>Roger Graham, The synergy of hardware and software, Prentice Hall, 1998, 
    0-13-145617-2 
  <LI>ΥΠΕΠΘ, Ανάπτυξη εφαρμογών σε προγραμματιστικό περιβάλλον, 1999, 960-7251-23-7 
  <LI>Douglas Bell, Ian Morey, John Pugh, The essence of program design, Prentice 
    Hall, 1997, 0-13-367806-7 
  <LI>Terry Winograd, Bringing design to software, ACM Press, 2000, 0-201-85491-0 
  <LI>Stefano Ceri, Dino Mandrioli, Licia Sbattella, The art and craft of computing, 
    Addison Wesley, 1998, 0-201-87698-1 
  <LI>Robert W. Sebesta, Concepts of Programming Languages, 5th ed., Addison Wesley, 
    2001, 0-201-75295-6 
  <LI>Ravi Sethi, Programming Languages: Concepts and Constructs, 2nd ed., Addison 
    Wesley, 1996, 0-201-59065-4 
  <LI>David Harel, Algorithmics: the spirit of computing, 2nd ed., Addison Wesley, 
    1992, 0-201-50401-4 
  <LI>J. Glenn Brookshear, Computer Science, an overview, 6th ed., Addison Wesley, 
    2000, 0-201-35747-X 
  <LI>Ι. Ανδρεάδης, Μια σύντομη αναδρομή στην τεχνολογία των ηλεκτρονικών υπολογιστών, 
    Δελτίο ΠΣΔΜ-Η, σελ. 48-52, Ιούλιος - Αύγουστος 2001 
  <LI>Deitel & Deitel, Java How to program, 3rd ed., Prentice Hall, 1999, 0-13-012507-5 
  <LI>Για συγκεκριμένες γλώσσες προγραμματισμού, προτείνονται τα βιβλία: 
  <LI>Paul Sheriff, O Paul Sheriff διδάσκει VB6, εκδόσεις Que, 960-520-224-7 
  <LI>P. H. Winston, S. Narasimhan, On to Java 1.2, 2nd ed., Addison Wesley, 1998, 
    0-201-38598-8 
  <LI>Bruce Eckel, Thinking in Java, 2nd ed., <A HREF="http://www.bruceEckel.com">HTML</A> 
    & <A HREF="http://www.planetpdf.com">PDF</A> version. 
  <LI>Γιώργος Λιακέας, Εισαγωγή στη Java, Κλειδάριθμος, 960-209-431-1 
</OL>
<P>Χρήσιμες διευθύνσεις ιστοσελίδων στο Διαδίκτυο:</P>
<UL>
  <LI><A HREF="http://olympiads.win.tue.nl/ioi">Ολυμπιάδες πληροφορικής με αλγοριθμικά 
    προβλήματα</A> 
  <LI><A HREF="http://icpc.baylor.edu/past/default.htm"> Μαθητικοί διαγωνισμοί 
    πληροφορικής που διοργανώνονται από την Association for Computing Machinery</A> 
  <LI><A HREF="http://www.pi-schools.gr/greek/epps/but3-informatics.htm">Βιβλία 
    πληροφορικής που έχουν εκ-δοθεί από το Παιδαγωγικό Ινστιτούτο</A> 
</UL>
<P>Σχετικές λίστες συζητήσεων (newsgroups) προσπελάσιμες μέσω του <A HREF="http://www.dejanews.com">Dejanews</A>: 
</P>
<UL>
  <LI>comp.lang.basic - για τη γλώσσα Basic 
  <LI>comp.lang.java - για τη Java 
  <LI>Γενικότερα η ομάδα newsgroups κάτω από τα comp.lang και alt.lang 
</UL>
<P ALIGN="right"><A HREF="Organosi.PDF">Οργάνωση μαθήματος σε μορφή PDF</A></P>
<A HREF="Default.htm">
<CENTER>
  Αρχική σελίδα του Ι. Γαβιώτη 
</CENTER>
</A> 
</BODY>
</HTML>
