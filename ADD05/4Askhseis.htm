<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Ασκήσεις μαθήματος 'Αλγόριθμοι, Δομές Δεδομένων'</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-7">
</head>
<link href="ADD.css" rel="stylesheet" type="text/css">
<body>
<p><strong>Ασκήσεις: <a href="#">1</a> <a href="#A2">2</a> <a href="#A3">3</a> <a href="#A4">4</a> <a href="#A5">5</a> <a href="#A6">6</a><em><font color="#660066"> 
  - </font></em></strong><strong><em><font color="#660066">ΜΗΝ ΑΝΤΙΓΡΑΨΕΤΕ</font></em></strong><font color="#660066"><em> - Κινδυνεύετε να χάσετε όλο το 
  μάθημα- Διαβάστε <a href="../Collabor.htm">Οδηγίες και Ποινές</a></em></font></p>
<p>Δείτε <a href="../AskLog.htm">οδηγίες για υποβολή ασκήσεων που περιλαμβάνουν λογισμικό</a>.</p>
<p><strong><a name="A1"></a>Άσκηση 1<sup>η</sup> </strong>- Ανακοινώθηκε την 25/10/2005 - μετράει για 15% του τελικού βαθμού - παραδοτέα μέχρι 9/11/2005</p>
<p>Για να αναπαραστήσετε ένα πολυώνυμο p(x)=a<sub>0</sub>x<sup>0</sup>+a<sub>1</sub>x<sup>1</sup>+...+a<sub>n</sub>x<sup>n</sup>, χρησιμοποιείτε έναν πίνακα 
  πραγματικών αριθμών στις θέσεις του οποίου αποθηκεύετε τους αντιστοίχους συντελεστές, πχ στη θέση 0 του πίνακα αποθηκεύετε το a<sub>0</sub>, κοκ.<br>
  α . Φτιάξτε μια κλάση <font face="Courier New, Courier, mono">Poly</font> που θα διαχειρίζεται πολυώνυμα. Θα περιλαμβάνει ως μεθόδους κατασκευαστή <font face="Courier New, Courier, mono">Poly</font> 
  και εκτυπωτικό <font face="Courier New, Courier, mono">toString</font>. <br>
  β . Επίσης, φτιάξτε μέθοδο που θα επιστρέφει την τιμή του πολυωνύμου για συγκεκριμένο x, πχ <font face="Courier New, Courier, mono">p.eval(4)</font>, 
  χρησιμοποιώντας τον τύπο που δόθηκε παραπάνω. <br>
  γ . Έπειτα φτιάξτε μια άλλη μέθοδο, πχ <font face="Courier New, Courier, mono">p.evalHorner(4)</font>, που υπολογίζει την τιμή του πολυώνυμου χρησιμοποιώντας 
  την μέθοδο Horner p(x)=a<sub>0</sub>+x(a<sub>1</sub>+x(a<sub>2</sub>+x(a<sub>3</sub>+...+x(a<sub>n-1</sub>+xa<sub>n</sub>)...))) . </p>
<p> δ . Γιατί η <font face="Courier New, Courier, mono">evalHorner</font> είναι πιο γρήγορη από την <font face="Courier New, Courier, mono">eval</font>; 
</p>
<p><strong>ή εναλλακτικά,</strong></p>
<p>Ένας πίνακας A περιέχει n-1 μοναδικούς ακεραίους με τιμές στο διάστημα [0, n-1], συνεπώς υπάρχει ένας αριθμός σε αυτό το διάστημα που δεν εμφανίζεται 
  στον Α. Σχεδιάστε έναν αλγόριθμο τάξης Ο(n) που να βρίσκει αυτόν τον αριθμό. Επιτρέπεται να χρησιμοποιήσετε μόνον Ο(1) πρόσθετο χώρο, εκτός από τον πίνακα 
  Α.</p>
<p>Ο πρώτος που θα λύσει τη δεύτερη εναλλακτική μου στέλνει email και όλοι οι υπόλοιποι ασχολούνται με την πρώτη εναλλακτική. <a href="Ask1e.pdf">ΛΥΘΗΚΕ 
  email 31/10/05 11:29μμ απο ΠΑΠΑΔΟΠΟΥΛΟΥ 2003/40</a>. Υπάρχει απλούστερη λύση με τις μισές πράξεις.</p>
<hr width="62%">
<p><strong><a name="A2"></a>Άσκηση 2<sup>η</sup></strong>- Ανακοινώθηκε την 1/11/2005 
  - μετράει για 15% του τελικού βαθμού- παραδοτέα μέχρι 22/11/2005</p>
<p>Χρησιμοποιήστε το κόσκινο του Ερατοσθένη για να προσδιορίσετε το πλήθος των 
  πρώτων αριθμών που είναι μικρότεροι του n, για n = 10<sup>3</sup>, 10<sup>4</sup>, 10<sup>5</sup> και 10<sup>6</sup>. Φτιάξτε 
  γράφημα που απεικονίζει το πλήθος των πρώτων μεταξύ 1 και 1000. Βελτιστοποιήστε 
  τον αλγόριθμο για να μειώσετε τις πράξεις και τον αποθηκευτικό χώρο. </p>
<p><strong>ή εναλλακτικά,</strong></p>
<p>Ένας βασιλιάς έχει ένα κελάρι με ν φιάλες ακριβού, παλιού κρασιού και η φρουρά 
  του μόλις συνέλαβε έναν κατάσκοπο να προσπαθεί να δηλητηριάσει το κρασί του 
  βασιλιά. Ευτυχώς, οι φρουροί έπιασαν τον κατάσκοπο αφού είχε βάλει δηλητήριο 
  σε μόνον μια φιάλη, αλλά δυστυχώς δεν γνωρίζουν σε ποια. Το δηλητήριο που χρησιμοποιήθηκε 
  είναι θανατηφόρο - μια σταγόνα του, οσοδήποτε κι αν αραιωθεί, επιφέρει το θάνατο 
  σε όποιον πιει. Ωστόσο, το δηλητήριο επιδρά αργά: ο θάνατος επέρχεται μετά από 
  ένα μήνα. Επινοήστε έναν τρόπο για να βρείτε ποια φιάλη περιέχει το δηλητήριο. 
  Έχετε στη διάθεσή σας έναν μήνα και Ο(λογ<sub>2</sub>ν) δοκιμαστές.</p>
<p>Ο πρώτος που θα λύσει τη δεύτερη εναλλακτική μου στέλνει email και όλοι οι υπόλοιποι ασχολούνται με την πρώτη εναλλακτική. <a href="ask2e.pdf">ΛΥΘΗΚΕ 
  email 4/11/05 21:14μμ απο ΠΑΠΑΔΟΠΟΥΛΟΥ 2003/40</a>. Υπάρχει απλούστερη λύση - πάντως η συγκεκριμένη είναι πλήρως τεκμηριωμένη.</p>
<hr width="62%">
<p><strong><a name="A3"></a>Άσκηση 3<sup>η</sup></strong>- Ανακοινώθηκε την 25/11/2005 - μετράει για 20% του τελικού βαθμού - παραδοτέα μέχρι 9/12/2005</p>
<p><strong>Ευρετήριο λέξεων κειμένου</strong>: Φτιάξτε πρόγραμμα που κατασκευάζει ευρετήριο όλων των λέξεων που εμφανίζονται σε ένα κείμενο και δίνει τη 
  δυνατότητα γρήγορης αναζήτησης μιας λέξης επιστρέφοντας τη σειρά στην οποία εμφανίζεται. Αν μια λέξη εμφανίζεται δυο φορές στην ίδια γραμμή, εισάγεται 
  μια φορά στο ευρετήριο. Αν εμφανίζεται σε πολλές γραμμές, η αναζήτηση επιστρέφει τη γραμμή της πρώτης εμφάνισης. Ακόλουθες αναζητήσεις επιστρέφουν τις 
  επόμενες γραμμές.<br>
  Η μέθοδος που κατασκευάζει το ευρετήριο, θα αναγνωρίζει τις λέξεις (αφαιρώντας τα σημεία στίξης και μετατρέποντάς τις με πεζά γράμματα) και θα τις τοποθετεί 
  σε κατάλληλη δομή δεδομένων. <br>
  Τόσο η εισαγωγή κάθε λέξης, όσο και η αναζήτησή της πρέπει να γίνεται σε χρόνο καλύτερο από Ο(<em>n</em>), όπου <em>n</em> είναι το πλήθος των λέξεων 
  στο ευρετήριο.<br>
  Ορίσετε ένα σύνολο λέξεων που δεν θα εισάγονται στο ευρετήριο (stop list). Τέλος, το πρόγραμμα τυπώνει το ευρετήριο.</p>
<p>Ονόματα μεθόδων της κλάσης TextIndex: insertWord, findWord, findNext, toString και addWordInStopList, removeWordFromStopList.</p>
<p>Παράδειγμα κειμένου:<br>
  1: Επιλογή της δομής είναι 'κλειδί' στη λύση της άσκησης.<br>
  2: Εκτιμήστε την επίδοση: χρόνου / χώρου της υλοποίησης.</p>
<p>άσκησης, 1<br>
  δομής, 1<br>
  είναι, 1<br>
  επίδοση, 2<br>
  επιλογή, 1<br>
  εκτιμήστε, 2<br>
  κλειδί, 1<br>
  λύση, 1<br>
  στη, 1<br>
  της, 1<br>
  της, 2<br>
  την, 2<br>
  υλοποίησης, 1<br>
  χρόνου, 1<br>
  χώρου, 1 </p>
<hr width="62%">
<p><strong><a name="A4"></a>Άσκηση 4<sup>η</sup></strong>- Μετράει για 20% του τελικού βαθμού - Παραδοτέα μέχρι 23/12/2005</p>
<p>Φορητή συσκευή<strong> jukebox</strong> αποθηκεύει τραγούδια για τα οποία τηρούνται πληροφορίες, όπως ο καλλιτέχνης, όνομα τραγουδιού, όνομα δίσκου, 
  έτος κυκλοφορίας, είδος μουσικής, ρυθμός κωδικοποίησης, διάρκεια, και όποιες άλλες κρίνετε εσείς. Σχεδιάστε δομή και αλγόριθμους έτσι ώστε ο κάτοχος της 
  συσκευής να απολαμβάνει τις ακροάσεις του! <br>
  Παραδείγματα: (1) Να μπορεί να ακούει τα τραγούδια που έχουν παίξει τις περισσότερες φορές (δημοφιλέστερα). (2) Να ακούει τα τραγούδια συγκεκριμένου είδους 
  μουσικής ή καλλιτέχνη με τυχαία σειρά. (3) Να ακούει με τυχαία σειρά τα τραγούδια που συνήθως ακούει τα βράδια (20.00-06.00). <br>
  Ορίστε με ακρίβεια τι σημαίνει για εσάς η 'τυχαία σειρά' και πώς την υλοποιείτε. Το πρόγραμμά σας θα αντλεί τα στοιχεία των τραγουδιών από αρχείο κειμένου 
  και θα τα αποθηκεύει πριν να τερματίσει. Πριν να ξεκινήσετε τη συγγραφή του προγράμματος, στείλτε μου ηλεκτρονικά ανάλυση του προβλήματος και προδιαγράψτε 
  τη λύση που θα υλοποιήσετε.</p>
<hr width="62%">
<p><strong><a name="A5"></a>Άσκηση 5<sup>η</sup></strong>- Μετράει για 15% του τελικού βαθμού - Παραδοτέα μέχρι 13/1/2006</p>
<hr width="62%">
<p><strong><a name="A6"></a>Άσκηση 6<sup>η</sup></strong>- Μετράει για 15% του τελικού βαθμού - Παραδοτέα μέχρι το τέλος της εξεταστικής περιόδου</p>
</body>
</html>
