<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Ασκήσεις μαθήματος 'Αλγόριθμοι, Δομές Δεδομένων'</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-7">
</head>
<link href="ADD.css" rel="stylesheet" type="text/css">
<body>
<p><strong>Ασκήσεις: <a href="#">1</a> <a href="#A2">2</a> <a href="#A3">3</a> 
  <a href="#A4">4</a> <a href="#AM">M</a><em><font color="#660066"> - </font></em></strong><strong><em><font color="#660066">ΜΗΝ 
  ΑΝΤΙΓΡΑΨΕΤΕ</font></em></strong><font color="#660066"><em> - Κινδυνεύετε να 
  χάσετε όλο το μάθημα- Διαβάστε <a href="../Collabor.htm">Οδηγίες και Ποινές</a></em></font></p>
<p>Δείτε <a href="../AskLog.htm">οδηγίες για υποβολή ασκήσεων που περιλαμβάνουν 
  λογισμικό</a>.</p>
<p><strong><a name="A1"></a>Άσκηση 1<sup>η</sup> </strong>- Μετράει για 20% του 
  τελικού βαθμού - παραδοτέα μέχρι 18/11/2007 - <a href="MKD.java">Πρότυπη λύση</a></p>
<p>Για να βρούμε το <strong>Μέγιστο Κοινό Διαιρέτη </strong>(ΜΚΔ) δύο ακεραίων 
  υπάρχουν διάφοροι αλγόριθμοι. Ο πιο απλός, ας τον ονομάσουμε Α, χρησιμοποιεί 
  διαδοχικές αφαιρέσεις, πχ ΜΚΔ(66,36) = ΜΚΔ(36,30) = ΜΚΔ(30,6) = ... = ΜΚΔ(12,6) 
  = ΜΚΔ(6,6 ) =ΜΚΔ(6,0) = 6. Ο αλγόριθμος του Ευκλείδη, ας τον πούμε Ε, χρησιμοποιεί 
  το υπόλοιπο από τις ακέραιες διαιρέσεις, πχ ΜΚΔ(66,36) = ΜΚΔ(36,30) = ΜΚΔ(30,6) 
  = ΜΚΔ(6,0) = 6. Συγκρίνετε τους δύο παραπάνω αλγορίθμους με τον αλγόριθμο Μ 
  (Joseph Stein, 1967) που χρησιμοποιεί αφαιρέσεις, έλεγχο ενός bit, και υποδιπλασιασμό:</p>
<p align="center"><img src="gcd.JPG" width="777" height="198"></p>
<p align="center">Η αναδρομή εφαρμόζεται μέχρι κάποιο από τα α,b να γίνει μηδέν, 
  πχ ΜΚΔ(66,36) = 2.ΜΚΔ(33,18) = 2.ΜΚΔ(33,9) = 2.ΜΚΔ(21,12) = 2.ΜΚΔ(21,6) = 2.ΜΚΔ(21,3) 
  = 2.ΜΚΔ(12,9) = 2.ΜΚΔ(6,9) = 2.ΜΚΔ(3,9) = 2.ΜΚΔ(6,3) = 2.ΜΚΔ(3,3) = 2.ΜΚΔ(3,0) 
  = 2.3 = 6.</p>
<p align="center">Μετρήστε ξεχωριστά τις εξής κατηγορίες πράξεων: (α) έλεγχος 
  για άρτιο/περιττό, διαίρεση δια δύο, (β) προσθαφαίρεση, και (γ) πολλαπλασιασμός, 
  υπόλοιπο ακέραιας διαίρεσης. Για μια καλή κάλυψη των αλγορίθμων ΜΚΔ δείτε D. 
  Knuth, The Art of Computer programming, vol. 2, pp. 333-341. </p>
<p align="center">Για τη σύγκριση θα καλείτε τον κάθε αλγόριθμο έτσι ώστε να υπολογίσει 
  (χωρίς να τυπώσει) όλους τους ΜΚΔ όλων των δυνατών ζευγών (x,y) όπου τα x,y 
  είναι μεταξύ 1 και 1000. Σε πρώτη φάση θα χρονομετρήσετε τους αλγορίθμους Α, 
  Ε, Μ και σε δεύτερη φάση θα μετρήσετε τις πράξεις που εκτελούν.</p>
<hr width="62%">
<p><strong><a name="A2"></a>Άσκηση 2<sup>η</sup></strong>-Μετράει για 25% του 
  τελικού βαθμού- παραδοτέα μέχρι 9/12/2007</p>
<table width="100%" border="2">
  <tr> 
    <td><p>Σε ένα διάνυσμα Α μεγέθους Ν, ένα στοιχείο του ονομάζεται <strong>πλειοψηφούν</strong>, 
        αν εμφανίζεται περισσότερες από Ν/2 φορές. Για παράδειγμα, στο {3, 3, 
        4, 2, 4, 4, 2, 4, 4} πλειοψηφεί το 4, ενώ στο {3, 3, 4, 2, 4, 4, 2, 4} 
        δεν υπάρχει τέτοιο στοιχείο. <br>
        (α) Χρονομετρήστε και εκτιμήστε την επίδοση του απλού αλγόριθμου που θα 
        εντοπίζει το πλειοψηφούν στοιχείο (δείτε πλαίσιο παρακάτω). <br>
        (β) Ένας άλλος αλγόριθμος είναι: Πρώτα βρες ένα υποψήφιο πλειοψηφούν στοιχείο 
        (αυτό είναι το δύσκολο) και έπειτα έλεγξε ότι αυτό είναι όντως πλειοψηφούν. 
        Για να βρεις υποψήφια στοιχεία, σύγκρινε τα Α[1] και Α[2] και αν είναι 
        ίσα, πρόσθεσε ένα από αυτά σε ένα διάνυσμα Β. Έπειτα σύγκρινε τα Α[3] 
        και Α[4], κοκ. Έπειτα εφάρμοσε αναδρομικά την ίδια μέθοδο στο διάνυσμα 
        Β. Στην περίπτωση που το πλήθος των στοιχείων είναι περιττό, έλεγξε (με 
        την κλασική μέθοδο) μήπως το τελευταίο στοιχείο είναι πλειοψηφούν, ενώ 
        αν δεν είναι, αγνόησέ το. Εκτιμήστε την επίδοση του αλγόριθμου.</p></td>
  </tr>
  <tr> 
    <td bgcolor="#FFFFFF"> <p><font size="-1" face="Courier New, Courier, mono">int 
        A[] = {3, 3, 2, 4, 4, 2, 4, 4, 4}; // πινακας με τα στοιχεια<br>
        int n = A.length; // το μεγεθος του πινακα<br>
        int aNumber;<br>
        int itsCount;<br>
        <br>
        for (int i = 0; i &lt; n/2; i++) { // για καθε στοιχειο μεχρι τη μεση 
        του πινακα<br>
        &nbsp;&nbsp; </font><font size="-1" face="Courier New, Courier, mono"> 
        aNumber = A[i]; // ερευνησε για το στοιχειο αυτο<br>
        &nbsp;&nbsp;&nbsp;&nbsp;itsCount = 0; // αρχικα εχει 0 επαναληψεις<br>
        &nbsp;&nbsp;&nbsp;&nbsp;for (int j = 0; j &lt; n; j++) // διαπερασε ολο 
        τον πινακα Ο(n)<br>
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (A[j] == aNumber) itsCount 
        ++; // βρηκες μια επαναληψη<br>
        &nbsp;&nbsp;&nbsp;&nbsp;System.out.println(aNumber + &quot;\t&quot; +itsCount); 
        //πληροφοριακο για αποσφαλματωση<br>
        &nbsp;&nbsp;&nbsp;&nbsp;if (itsCount &gt; n/2) {<br>
        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;System.out.print(&quot;Πλειοψηφούν 
        στοιχείο: &quot; + aNumber + &quot; Επαναλήψεις: &quot; + itsCount); <br>
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.exit(0);<br>
        &nbsp;&nbsp;&nbsp;&nbsp;}<br>
        </font><font size="-1" face="Courier New, Courier, mono">} // end for 
        i<br>
        System.out.println(&quot;Δεν υπάρχει πλειοψηφούν στοιχείο.&quot;);<br>
        </font></p>
      </td>
  </tr>
</table>
<hr width="62%">
<p><strong><a name="A3"></a>Άσκηση 3<sup>η</sup></strong>- Μετράει για 25% του 
  τελικού βαθμού - παραδοτέα μέχρι 14/1/2008</p>
<p>Φτιάξτε πρόγραμμα που να υλοποιεί τον αφαιρετικό τύπο δεδομένων <strong>'Δέντρο 
  Σωρού'</strong>. Πιο συγκεκριμένα, αφού επιλέξετε αποθηκευτικό σχήμα, θα υλοποιήσετε 
  τις μεθόδους <font face="Courier New, Courier, mono">insert</font> και <font face="Courier New, Courier, mono">removeMin</font>. 
  Έπειτα χρησιμοποιήστε το πρόγραμμά σας για να κατασκευάσετε μια ουρά προτεραιοτήτων 
  και γεμίστε την με τους Ν=6000 επιβάτες μιας αεροπορικής εταιρίας που παίρνουν 
  προτεραιότητα 0..20 (Χρησιμοποιήστε γεννήτρια τυχαίων αριθμών για να παράγετε 
  τις προτεραιότητες.) Αφαιρέστε όλους τους επιβάτες από την ουρά. Κατά την εισαγωγή 
  μετρήστε τις κινήσεις φυσαλίδας και κατά την εξαγωγή τις κινήσεις βαρίδι.<br>
  Προαιρετικά (με bonus +10%): κάντε μαζικά τις εισαγωγές με τον αλγόριθμο <font face="Courier New, Courier, mono">buildHeap</font>. 
  Συγκρίνετε την κατασκευή του σωρού με αυτόν τον τρόπο και με τα διαδοχικά <font face="Courier New, Courier, mono">insert</font>, 
  μετρώντας αντιμεταθέσεις στοιχείων.</p>
<hr width="62%">
<p><strong><a name="A4"></a>Άσκηση 4<sup>η</sup></strong>- Μετράει για 30% του 
  τελικού βαθμού - Παραδοτέα μέχρι 11/2/2008</p>
<p>Μεταξύ N ανθρώπων, μια <strong>διασημότητα</strong> είναι κάποιος που όλοι 
  ξέρουν, αλλά που αυτός δεν ξέρει κανένα. Για να αναγνωρίσετε μια διασημότητα, 
  αν υπάρχει, σας επιτρέπεται να κάνετε ερωτήσεις σε οποιονδήποτε από τους N ανθρώπους, 
  αλλά μόνο της μορφής: &quot;Με συγχωρείτε, ξέρετε εκείνον εκεί τον άνθρωπο;&quot; 
  Υποθέστε ότι όλες οι απαντήσεις που δίνονται είναι σωστές. Ελαχιστοποιήστε τον 
  αριθμό των ερωτήσεων που χρειάζεται να κάνετε για να προσδιορίσετε τη διασημότητα, 
  αν υπάρχει, ή για να αποφασίσετε ότι δεν υπάρχει διασημότητα σε ένα δοσμένο 
  σύνολο N ανθρώπων.</p>
<hr width="62%">
<p><strong><a name="AM"></a>Άσκηση μπαλαντέρ</strong>- Μπορεί να αντικαταστήσει 
  οποιαδήποτε από τις υπόλοιπες ασκήσεις</p>
<p>Καθένας από n γιατρούς πρέπει να χειρουργήσει χωριστά καθένα από n ασθενείς. 
  Ωστόσο οι χειρούργοι δε θέλουν να κολλήσουν τις αρρώστιες των ασθενών τους, 
  ούτε θέλουν να μολύνουν κάποιον ασθενή με την αρρώστια κάποιου άλλου ασθενή. 
  Οι διαδικαστικοί κανόνες στην κλινική απαιτούν ότι καμιά επιφάνεια γαντιού την 
  οποία έχει αγγίξει ένας γιατρός δε θα πρέπει να αγγίξει κάποιο ασθενή. Υποθέστε 
  επίσης ότι κάθε χειρούργος αρνείται να αγγίξει μία επιφάνεια γαντιού την οποία 
  έχει αγγίξει κάποιος χειρούργος. <br>
  a. Δείξτε ότι δύο χειρούργοι μπορούν να εγχειρίσουν δύο ασθενείς χρησιμοποιώντας 
  μόνο δύο<strong> χειρουργικά γάντια </strong>συνολικά. (Υπόδειξη: Τα χειρουργικά 
  γάντια είναι κατασκευασμένα από λάστιχο και άρα μπορούν να αντιστραφούν - δηλαδή 
  να γυρίσει το μέσα έξω.) <a href="giatroi2.htm">[Λύση από τον Θ.Μπάντιο - 10/10/2007]</a><br>
  b. Ποιος είναι ο ελάχιστος αριθμός χειρουργικών γαντιών που απαιτούνται για 
  να γίνουν n<sup>2</sup> εγχειρήσεις.<br>
  c. Αποδείξτε ότι ο αλγόριθμός σας είναι βέλτιστος.<br>
</p>
</body>
</html>
