<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 TRANSITIONAL//en">
<HTML>
<HEAD>
<TITLE> Selection of published work of Dr I. Gaviotis </TITLE>
<LINK REL=stylesheet TYPE="text/css" HREF=MyCss.css>
</HEAD>
<BODY BGCOLOR="#CEEFBD">
<H2>Selected published work and abstracts</H2>
<UL>
  <LI>An e-Collaboration Software Framework for the Ship Repair Supply Chain, 
    <I>Proceedings of ICCAS 2005</I>, pp. 717-728, Busan, Korea, August 23-26, 
    2005. 
    <BLOCKQUOTE><SMALL><B>Abstract:</B> This work deals with the issues of information 
      flow and efficient coordination of the activities performed by cooperating 
      companies for the repair of a ship. In small-to-medium ship repair yards, 
      the business chains that need to be established are short-lived with rather 
      low transaction volumes and varying terms, reflecting loose or even one-time 
      business relationships. Moreover, work scheduling is in a constant state 
      of flux and last-minute change. Having studied the business practices of 
      the ship repair sector, we present a comprehensive model addressing workflow 
      and information flow within the ship repair environment. We then present 
      a software framework that implements our model with a high degree of behavior 
      customization. This framework makes minimal assumptions concerning the information 
      technology infrastructure of the business partners, such as the ship repair 
      yard, suppliers of materials, subcontractors and ship owners.<br>
      <br>
      The software system is an Internet-enabled application operating through 
      a web browser interface. Email and SMS messages serve as additional communication 
      channels. A collaboration framework integrates the existing software applications 
      of each partner using XML to seamlessly swap data. A standards-based security 
      mechanism safeguards the sensitive nature of exchanged information.<br>
      The system handles critical operations of the ship repair business, such 
      as enquiries, tendering, cost estimation and order promising. When the contract 
      is confirmed, the system continues with job scheduling and monitoring and 
      it concludes with invoicing. Moreover, the system can handle ship repairs 
      taking place in many production sites.<br>
      We present our findings from the pilot-use of the system in five European 
      yards, where it operates as a non-obtrusive tool for the management of supply 
      chains. It required minimal investment / organizational changes from participating 
      partners and returns immediate results: monitoring of historical transactions, 
      capture of interim negotiation phases, and immediate notification through 
      alternative communication channels. Finally, we pinpoint some modeling preconceptions 
      from the system developers and legacy business rules abstaining from currently 
      viable best practices.</SMALL></BLOCKQUOTE>
  
  <LI>Communicating in a software engineering environment: the GRASPIN paradigm, 
    <I>Journal of Systems & Software</I>, vol. 15, no. 1, pp. 83-90, Elsevier 
    Publ. Co., April 1991. 
    <BLOCKQUOTE><SMALL><B>Abstract:</B> Programming environments need a specially 
      tailored component which handles the interaction between the user and a 
      variety of tools. In this paper, the principles that guided the implementation 
      strategy for such a component in the development of the GRASPIN environment 
      are reported. The functionalities of the User-Tool Interaction Subsystem 
      are presented and the way they were incorporated in the overall architecture 
      is described.</SMALL> </BLOCKQUOTE>
    <BLOCKQUOTE><SMALL> 
      <P>In particular, focus is placed on the development of the user interface 
        of a software engineering environment based on the properties of uniformity, 
        consistency, and customizability. Our experience has shown that in addition 
        to these properties, a proper mixture of 'minor' facilities, such as history 
        editing, online help, and command completion, when uniformly applied, 
        can make the difference between a good and bad user interface. </SMALL></BLOCKQUOTE>
  <LI>ROGES: a knowledge-based expert system, <I>Diploma Thesis</I>, Dept. of 
    Computer Engineering & Informatics, Patras Univ., July 1989. <A HREF=Roges.htm>Δες 
    περίληψη</A> 
  <LI>An overview of library automation in Greece, <I>Proceedings of 1st Telephassa 
    Seminar on Innovative Information Services</I>, pp. 123-136, Tilburg University 
    Press, 1992. 
    <BLOCKQUOTE><SMALL><B>Abstract:</B> Following a general automatization effort 
      in their premises, three university libraries in Greece, Spain and the Netherlands 
      have adopted computer-based instruction for their users and personnel. Multimedia 
      interactive programs introduce the innovative services for information disclosure. 
      They offer guidance on the use of new technologies employed in modern libraries, 
      such as CD-ROM based and remote bibliographic databases, on-line public 
      access catalogs and wide area information services. 
      <P>In this article, we specify the target, present the methodologies that 
        were employed to effect computer-aided learning and suggest a deployment 
        strategy. Qualitative and quantitative measures of the effort are given 
        in terms of people, know-how, development time and equipment. We also 
        describe the principles of hypermedia technology that underlies interactive 
        presentations and offers a conceptual framework for structural and navigation 
        facilities. We conclude with the experiences gained throughout our project. 
      </SMALL></BLOCKQUOTE>
  <LI>Distributed Documents: an architecture for open distributed hypertext, <I>Electronic 
    Publishing</I>, John Wiley & Sons Publ. Co., 1994. 
    <BLOCKQUOTE><SMALL><B>Abstract:</B> A conceptual design for our architecture 
      centered around the entities of a hypermedia node, link, anchor and document 
      is initially presented. Each entity has a well defined interface so that 
      the respective instances can cooperate despite the number of different media 
      types. Virtual documents are created as views on other documents borrowing 
      from their content and customizing their behavior during navigation and 
      editing. 
      <P>The system functionality is provided by hypertext document objects, acting 
        as providers of hypermedia services. There are storage and display services 
        which are accessible and consumable by the local and remote clients spanning 
        the operating system and workstation boundaries. Due to the object-based 
        approach taken at design and implementation, the incorporation of new 
        types of services (general and media specific) is straightforward and 
        integrates smoothly with the rest of the system. </SMALL></BLOCKQUOTE>
  <LI>Translation of the book in greek: Ellis Horowitz, <I>Fundamentals of Programming 
    Languages</I>, Klidarithmos Publ. Co., Athens 1993. 
  <LI>User interfaces for information retrieval & automatic extraction of keywords, 
    <I>SCRIPT project, Task 5.4, Computer Technology Institute TR.93.10.93</I>, 
    October 1994. 
  <LI>On the organization of heterogeneous unstructured information using distributed 
    hypermedia, <I>PhD Thesis</I>, Dept. of Computer Engineering & Informatics, 
    Patras Univ., July 1994. <A HREF=phd.htm>Δες περίληψη / See abstract</A> 
    <BLOCKQUOTE><SMALL><B>Abstract:</B> Multimedia data is produced by various 
      applications that do not cooperate. Parts of the information are dispersed 
      on many workstations over the computer network. Our target is to create 
      a cohesive framework uniting those parts, so that its organization reflects 
      the logical relationship between contents, rather than their differing physical 
      properties (format, media type, storage placement). We study the functionality 
      of general purpose, state-of-the-art hypermedia systems and propose a mathematical, 
      formal model for active hypermedia that is based on production rule systems. 
      This model maintains properties and integrity constraints for hyper documents 
      and it supports versions and views. It causes the automatic evolution of 
      the hyper structure to handle continuously changing information of the hyper 
      document. <TT> HyperArchi </TT> implements our model. It interconnects parts 
      from an open-ended set of applications. We examine practical aspects, such 
      as the separation of the functionality into a client and a server, and the 
      automatic link generation for big textual collections. We study the issues 
      about the interface to the end user, having two custom-made systems as case 
      studies. </SMALL></BLOCKQUOTE>
  <LI>The Telephassa project Interactive Instruction Modules, <I>Proc. of 4th 
    Telephassa Seminar on User Support (inter-)national cooperation & strategy</I>, 
    pp. 47-60, Tilburg University Press, 1993. 
  <LI>Requirements for distributed hypertext, ESPRIT Project ISA, <I>Architectural 
    Report Task W.04</I>, Cambridge, April 1993. 
  <LI>A model for hypermedia based on production systems, <I>5th Int. Conf. on 
    Database & Expert Systems Applications</I>, Athens, September 7-9, 1994, appears 
    in Lecture Notes in Computer Science, Springer-Verlag Publ. Co. 
    <BLOCKQUOTE><SMALL><B>Abstract:</B> A number of theoretical models have been 
      proposed that describe formally the structure and semantics associated with 
      hypertext systems. We define a set of criteria for general purpose hypermedia 
      models and survey three well-known models that focus on capturing the structure 
      of the hypertext graph, the synchronization semantics of navigation, and 
      the database aspect of the hyper structure, respectively. We assess those 
      models on the basis of the forth set criteria to make explicit the aspects 
      that receive less attention and are only modelled implicitly. We also present 
      some other attempts which capture special aspects of hypertexts. Then we 
      introduce a new model for hypermedia which elaborates on these criteria 
      and attempts to synthesize them into a coherent and general purpose theory. 
      Moreover, our model which is based on objects and rule-based expert systems 
      lends itself to a natural depiction as an implementable system. We give 
      an outline for an architecture based on this model and conclude with the 
      assessment of our proposed model. We argue that the combination of hypermedia 
      with a production rule system sustains tight control for navigation and 
      synchronization and enables the expression of dynamic properties and constraints. 
      </SMALL></BLOCKQUOTE>
  <LI>Interactive instruction for library users and personnel using hypermedia, 
    <I>Proc. of the 3rd AAIM Conf. on Multimedia in Education & Industry</I>, 
    pp. 103-112, Charleston, S. Carolina, July 24-26, 1994. 
    <BLOCKQUOTE><SMALL><B>Abstract:</B> Following a general automation effort 
      in their premises, three university libraries in Greece, Spain and the Netherlands 
      have adopted computer-based instruction for their users and personnel. Multimedia 
      interactive programs introduce the innovative services for information disclosure. 
      They offer guidance on the use of new technologies employed in modern libraries, 
      such as CD-ROM based and remote bibliographic databases, on-line public 
      access catalogs and wide area information services. 
      <P>In this article, we specify the target, present the methodologies that 
        were employed to effect computer-aided learning and suggest a development 
        strategy. Qualitative and quantitative measures of the effort are given 
        in terms of people, know-how, development time and equipment. We also 
        describe the principles of hypermedia technology that underlies interactive 
        presentations and offers a conceptual framework for structural and navigation 
        facilities. We conclude with the experiences gained throughout our project. 
      </SMALL></BLOCKQUOTE>
  <LI>Computer-based instruction for library users and personnel, <I>7th Conf. 
    of Greek Librarians</I>, Athens, pp. 397-407, May 1993. 
  <LI>Integration of automated facilities in the library of Patras University, 
    <I>7th Conf. of Greek Librarians</I>, pp. 408-417, Athens, May 1993. 
  <LI>Architectural requirements for distributed hypermedia, <I>Information & 
    Software Technology</I>, 37(4), pp. 245-251, Butterworth-Heinemann Publ. Co., 
    1995. 
    <BLOCKQUOTE><SMALL><B>Abstract:</B> This paper presents the benefits that 
      arise from the distributed implementation of hypermedia and investigates 
      the demands that hypermedia systems pose to the distributed platform. We 
      argue that hypermedia functionality must be supported at the system level, 
      rather than the application level. We do not restrict our attention to any 
      specific hypermedia application domain. We recognize the facilities that 
      the distributed platform must offer in order to support the hyper-linking 
      concept among an open set of applications and their documents. 
      <P>The paper is organized in two parts: first, we summarize the basic features 
        of general-purpose hypermedia. Then, we study how these features are implemented 
        and enhanced using facilities of the distributed system, such as replication, 
        caching, remote activation and trading service. Subsequently, we collect 
        a set of requirements, assess their usefulness for open hypermedia and 
        describe their implications on the distributed system. </SMALL></BLOCKQUOTE>
</UL>
<CENTER>
  <A HREF="Default.htm">Home page</A> 
</CENTER>
</BODY>
</HTML>
